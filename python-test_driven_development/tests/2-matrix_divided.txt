Doctest for the 2-matrix_divided.py

The function return a new matrix_divided

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

**************
if good output
**************

>>> matrix_divided([[2, 4, 6], [8, 10, 12]], 2)
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

>>> matrix_divided([[1, 2, 3], [1, 2, 3]], 4444)
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

>>> matrix_divided([[1, 2, 3], [1, 2, 3]], 2)
[[0.5, 1.0, 1.5], [0.5, 1.0, 1.5]]

>>> matrix_divided([[1.1, -2.2, 3.3], [4.4, 5.5, -6.6]], 3)
[[0.37, -0.73, 1.1], [1.47, 1.83, -2.2]]

******************
if not good output
******************

>>> matrix_divided([[1, 2, 3], [4, "random", 6]], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3], [4, 5, 6, 7]], 3)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1, 2, 3], [4, 5, 6]])
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix_divided([[1,2,3], [1,2,3]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided([[3,2,1]], None)
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided(None, None)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats